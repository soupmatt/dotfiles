# use C-j as the tmux prefix instead of C-b
set -g prefix C-j
unbind C-b

# use C-j C-j to send C-j
bind C-j send-prefix

# start numbering windows and panes at 1
set -g base-index 1
set-window-option -g pane-base-index 1

# renumber windows after closing any of them
set -g renumber-windows on

# Don't wait for the escape sequence
set -s escape-time 0

# Highlight active window
set-window-option -g window-status-current-bg '#e12e3c'

# soften status bar color from harsh green to light gray
#set -g status-bg '#666666'
#set -g status-fg '#aaaaaa'

# act like vim
setw -g mode-keys vi
setw -g status-keys vi
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

bind-key -r C-h select-window -t :-
bind-key -r C-l select-window -t :+

#window split commands that are a bit more intuitive
bind-key | split-window -h -c "#{pane_current_path}"
bind-key _ split-window -v -c "#{pane_current_path}"

# zoom with +, go back with -
unbind +
bind + new-window -d -n tmux-zoom 'clear && echo TMUX ZOOM && read' \; swap-pane -s tmux-zoom.0 \; select-window -t tmux-zoom
unbind -
bind - last-window \; swap-pane -s tmux-zoom.0 \; kill-window -t tmux-zoom

# because sometimes it's nice to have a mouse
set -g mouse-select-pane on
set -g mouse-resize-pane on
set -g mouse-select-window on
set-window-option -g mode-mouse on

# give an audible bell if any of the windows want to send a bell
set-option -g bell-action any
set-option -g visual-bell off

# keep 10k lines of history
set -g history-limit 10000

# ssh into given host in a new window
bind-key S command-prompt -p ssh: "new-window -n %1 'TERM=screen ssh %1'"
# or new pane
bind-key C-s command-prompt -p ssh: "split-window -h 'TERM=screen ssh %1'"

# rename window after current working directory
# still needs some work...
#  bind-key < rename-window `ruby -e "p Dir.pwd.split('/').last"`

# Reload this file
bind-key R source-file ~/.tmux.conf \; display-message "source-file done"

# Use a term with better colors
set -g default-terminal "screen-256color"

#unset the path, otherwise zsh munges it up
set-environment -gu PATH

# fix for making pbcopy and pbpaste work
set-option -g default-command "reattach-to-user-namespace -l /usr/local/bin/zsh"

# put tmux buffer into osx clipboard
bind y run-shell "reattach-to-user-namespace -l /bin/zsh -c 'tmux show-buffer | pbcopy'"
